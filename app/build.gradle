apply plugin: 'com.android.application'

ext {
    versionControl = [
            VSupportSdk : '26.1.0',
            VRxlifecycle: "2.0.1",
            DaggerVersion : "2.11"
    ]
}

android {


    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "bupt.liao.fred.socialsearch"
        minSdkVersion 23
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            buildConfigField("String", "TWITTER_CONSUMER_KEY", "\"" + TWITTER_CONSUMER_KEY + "\"")
            buildConfigField("String", "TWITTER_CONSUMER_SECRET", "\"" + TWITTER_CONSUMER_SECRET + "\"")
            buildConfigField("String", "TWITTER_ACCESS_TOKEN", "\"" + TWITTER_ACCESS_TOKEN + "\"")
            buildConfigField("String", "TWITTER_ACCESS_TOKEN_SECRET",
                    "\"" + TWITTER_ACCESS_TOKEN_SECRET + "\"")
            minifyEnabled false
            applicationIdSuffix ".debug"
        }

        release {
            buildConfigField("String", "TWITTER_CONSUMER_KEY", "\"" + TWITTER_CONSUMER_KEY + "\"")
            buildConfigField("String", "TWITTER_CONSUMER_SECRET", "\"" + TWITTER_CONSUMER_SECRET + "\"")
            buildConfigField("String", "TWITTER_ACCESS_TOKEN", "\"" + TWITTER_ACCESS_TOKEN + "\"")
            buildConfigField("String", "TWITTER_ACCESS_TOKEN_SECRET",
                    "\"" + TWITTER_ACCESS_TOKEN_SECRET + "\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
        exclude 'ASL-2.0.txt'
        exclude 'LGPL-3.0.txt'
        exclude 'META-INF/ASL-2.0.txt'
        exclude 'META-INF/LGPL-3.0.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/services/com.fasterxml.jackson.databind.Module'
        exclude 'META-INF/rxjava.properties'
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // backward compatibility and design support
    implementation "com.android.support:appcompat-v7:${versionControl["VSupportSdk"]}"
    implementation "com.android.support:recyclerview-v7:${versionControl["VSupportSdk"]}"
    implementation "com.android.support:design:${versionControl["VSupportSdk"]}"

    //rxlifecycle libraries
    implementation "com.trello.rxlifecycle2:rxlifecycle:${versionControl["VRxlifecycle"]}"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:${versionControl["VRxlifecycle"]}"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:${versionControl["VRxlifecycle"]}"

    // reactive libraries
    implementation 'io.reactivex:rxjava:1.1.1'
    implementation 'io.reactivex:rxandroid:1.1.0'
    implementation 'com.github.pwittchen:reactivenetwork:0.2.0'

    //dependency injection & view injection
    implementation "com.google.dagger:dagger:${versionControl["DaggerVersion"]}"
    annotationProcessor "com.google.dagger:dagger-compiler:${versionControl["DaggerVersion"]}"
    // Dagger Android
    annotationProcessor "com.google.dagger:dagger-android-processor:${versionControl["DaggerVersion"]}"
    compile "com.google.dagger:dagger-android-support:${versionControl["DaggerVersion"]}"
    // if you are not using support library, include this instead
    compile "com.google.dagger:dagger-android:${versionControl["DaggerVersion"]}"
    provided 'javax.annotation:jsr250-api:1.0'
    implementation "com.jakewharton:butterknife:8.4.0"
    annotationProcessor "com.jakewharton:butterknife-compiler:8.4.0"

    //Test library
    testImplementation 'junit:junit:4.12'
    compile 'com.android.support:support-annotations:22.2.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:0.4.1'
    androidTestImplementation('com.google.truth:truth:0.28') {
        exclude group: 'junit' // Android has JUnit built in
    }
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2' // required by Mockito
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2' // required by Mockito
    androidTestImplementation 'org.mockito:mockito-core:1.10.19'

    //Ohters: PickerView, FlipView, Twitter4j, MaterialSearchView, Picasso, Infinitescroll, Timber, Time
    implementation 'com.contrarywind:Android-PickerView:3.2.7'
    implementation 'bupt.liao.fred:FlipView:1.0.1'
    implementation 'org.twitter4j:twitter4j-core:4.0.4'
    implementation 'com.miguelcatalan:materialsearchview:1.2.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.github.pwittchen:infinitescroll:0.0.1'
    implementation 'com.jakewharton.timber:timber:4.1.2'
    implementation 'joda-time:joda-time:2.8.2'
}
